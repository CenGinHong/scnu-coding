// ==========================================================================
// This is auto-generated by gf cli tool. Fill this file as you wish.
// ==========================================================================

package define

import (
	"github.com/gogf/gf/os/gtime"
	"github.com/gogf/gf/util/gmeta"
)

// Fill with you ideas below.

type InsertCourseCommentReq struct {
	CourseId    int    // 实验内容
	CommentText string // 评论内容
	Pid         int    // 父评论id，主评时为空
}

type CourseCommentResp struct {
	gmeta.Meta  `orm:"table:course_comment"`
	CommentId   int    `orm:"comment_id,primary" json:"commentId"` // 主键
	CourseId    int    `orm:"course_id" json:"courseId"`           // 实验内容
	CommentText string `orm:"comment_text" json:"commentText"`     // 评论内容，限300字
	Pid         int    `orm:"pid" json:"-"`                        // 父评论id，主评时为空
	UserId      int    `orm:"user_id" json:"-"`                    // 发评论的用户id
	UserDetail  *struct {
		gmeta.Meta `orm:"table:sys_user"`
		UserId     int    `orm:"user_id" json:"userId"`
		Username   string `orm:"username" json:"username"`
		AvatarUrl  string `orm:"avatar_url" json:"avatarUrl"`
	} `orm:"with:user_id" json:"userDetail"`
	CreatedAt     *gtime.Time          `orm:"created_at"             json:"createdAt"` // 创建时间
	UpdatedAt     *gtime.Time          `orm:"updated_at"             json:"updatedAt"` // 更新时间
	ReplyComments []*CourseCommentResp `orm:"with:pid=comment_id" json:"replyComments"`
}

type LabCommentResp struct {
	gmeta.Meta  `orm:"table:lab_comment"`
	CommentId   int    `orm:"comment_id,primary" json:"commentId"` // 主键
	LabId       int    `orm:"lab_id" json:"labId"`                 // 实验id
	CommentText string `orm:"comment_text" json:"commentText"`     // 评论内容，限300字
	Pid         int    `orm:"pid" json:"pid"`                      // 父评论id，主评时为0
	UserId      int    `orm:"user_id" json:"_"`                    // 发评论的用户id
	UserDetail  *struct {
		gmeta.Meta `orm:"table:sys_user"`
		UserId     int    `orm:"user_id" json:"userId"`
		Username   string `orm:"username" json:"username"`
		AvatarUrl  string `orm:"avatar_url" json:"avatarUrl"`
	} `orm:"with:user_id" json:"userDetail"`
	CreatedAt     *gtime.Time       `orm:"created_at" json:"createdAt"`              // 创建时间
	UpdatedAt     *gtime.Time       `orm:"updated_at" json:"updatedAt"`              // 更新时间
	ReplyComments []*LabCommentResp `orm:"with:pid=comment_id" json:"replyComments"` // 子评论
}

type InsertLabCommentReq struct {
	LabId       int    // 实验id
	CommentText string // 评论内容
	Pid         int    // 父评论id，主评时为0
}
