// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
)

// LabSubmitDao is the manager for logic model data accessing and custom defined data operations functions management.
type LabSubmitDao struct {
	Table   string           // Table is the underlying table name of the DAO.
	Group   string           // Group is the database configuration group name of current DAO.
	Columns LabSubmitColumns // Columns is the short type for Columns, which contains all the column names of Table for convenient usage.
}

// LabSubmitColumns defines and stores column names for table lab_submit.
type LabSubmitColumns struct {
	LabSubmitId      string //
	LabId            string // lab id
	UserId           string // 用户id
	ReportContent    string // 实验报告(md)/存放实验报告pdf的url
	Score            string // 分数
	IsFinish         string // 是否完成
	LabSubmitComment string // 评论
	UpdatedAt        string // 更新时间
	CreatedAt        string // 创建时间
}

//  labSubmitColumns holds the columns for table lab_submit.
var labSubmitColumns = LabSubmitColumns{
	LabSubmitId:      "lab_submit_id",
	LabId:            "lab_id",
	UserId:           "user_id",
	ReportContent:    "report_content",
	Score:            "score",
	IsFinish:         "is_finish",
	LabSubmitComment: "lab_submit_comment",
	UpdatedAt:        "updated_at",
	CreatedAt:        "created_at",
}

// NewLabSubmitDao creates and returns a new DAO object for table data access.
func NewLabSubmitDao() *LabSubmitDao {
	return &LabSubmitDao{
		Group:   "default",
		Table:   "lab_submit",
		Columns: labSubmitColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *LabSubmitDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *LabSubmitDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *LabSubmitDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
