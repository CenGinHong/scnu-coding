// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
)

// CourseDao is the manager for logic model data accessing and custom defined data operations functions management.
type CourseDao struct {
	Table   string          // Table is the underlying table name of the DAO.
	Group   string          // Group is the database configuration group name of current DAO.
	Columns CourseColumns // Columns is the short type for Columns, which contains all the column names of Table for convenient usage.
}

// CourseColumns defines and stores column names for table course.
type CourseColumns struct {
	CourseId      string // 主键                
    UserId        string // 教师id              
    CourseName    string // 课程名称，限15字    
    CourseDes     string // 课程描述，限300字   
    CoverFileId   string // 封面url的id         
    SecretKey     string // 加入课程的密码,6位  
    IsClose       string // 结课标志            
    LanguageType  string //                     
    CreatedAt     string // 创建时间            
    UpdatedAt     string // 修改时间
}

//  courseColumns holds the columns for table course.
var courseColumns = CourseColumns{
	CourseId:     "course_id",      
            UserId:       "user_id",        
            CourseName:   "course_name",    
            CourseDes:    "course_des",     
            CoverFileId:  "cover_file_id",  
            SecretKey:    "secret_key",     
            IsClose:      "is_close",       
            LanguageType: "language_type",  
            CreatedAt:    "created_at",     
            UpdatedAt:    "updated_at",
}

// NewCourseDao creates and returns a new DAO object for table data access.
func NewCourseDao() *CourseDao {
	return &CourseDao{
		Group:   "default",
		Table:   "course",
		Columns: courseColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *CourseDao) DB() gdb.DB {
	return g.DB(dao.Group)
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *CourseDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.Table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *CourseDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}